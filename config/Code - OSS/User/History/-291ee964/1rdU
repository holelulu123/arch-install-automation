# Compiler and Tools
CC = arm-none-eabi-gcc
AS = arm-none-eabi-as 
LD = arm-none-eabi-ld
OBJCOPY = arm-none-eabi-objcopy

# Paths
STARTUPDIR = /home/holelulu/Documents/stm32l1/STM32CubeL0/Drivers/CMSIS/Device/ST/STM32L0xx/Source/Templates/gcc
STARTUP_SRC = $(STARTUPDIR)/startup_stm32l072xx.s

INCDIR += /home/holelulu/Documents/stm32l1/STM32CubeL0/Drivers/CMSIS/Include 
INCDIR += /home/holelulu/Documents/stm32l1/STM32CubeL0/Drivers/CMSIS/Device/ST/STM32L0xx/Include

LIBDIR += /home/holelulu/Documents/stm32l1/STM32CubeL0/Drivers/CMSIS/Lib/GCC

BUILDDIR = build

# Source Files
SRCS = src/bit_test.c
OBJS = $(BUILDDIR)/bit_test.o $(BUILDDIR)/startup.o

# Compiler Flags
CFLAGS = -mcpu=cortex-m0plus -mthumb -Wall $(addprefix -I, $(INCDIR))
LDFLAGS = -T linker/STM32L072CZT6_FLASH.ld -nostartfiles


# Compile main source file
$(BUILDDIR)/bit_test.o: src/bit_test.c | $(BUILDDIR)
	$(CC) $(CFLAGS) -c $< -o $@

# Compile startup assembly file
$(BUILDDIR)/startup.o: $(STARTUP_SRC) | $(BUILDDIR)
	$(AS) -mcpu=cortex-m0plus $< -o $@

# Link all object files
$(BUILDDIR)/firmware.elf: $(OBJS)
	$(CC) $(OBJS) $(LDFLAGS) -o $@

# Convert ELF to Binary
$(BUILDDIR)/firmware.bin: $(BUILDDIR)/firmware.elf
	$(OBJCOPY) -O binary $< $@

# Flash the binary to the STM32
flash: $(BUILDDIR)/firmware.bin
	st-flash write $< 0x08000000

# Clean the build directory
clean:
	rm -rf $(BUILDDIR)/*.o $(BUILDDIR)/*.elf $(BUILDDIR)/*.bin 
